services:
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: cowork
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  api-gateway:
    build: ./services/api-gateway
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - user-service
      - venue-service
      - booking-service
      - chat-service
      - notification-service
      - map-service
      - statistic-service
      - payment-service

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: always
    env_file:
      - .env
    depends_on:
      - mysql
      - user-service
    ports:
      - "8081:8081"

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: always
    env_file:
      - .env
    depends_on:
      - mysql
    ports:
      - "8082:8082"

  venue-service:
    build: ./services/venue-service
    ports:
      - "8083:8083"

  booking-service:
    build: ./services/booking-service
    ports:
      - "8084:8084"

  payment-service:
    build: ./services/payment-service
    ports:
      - "8085:8085"

  chat-service:
    build: ./services/chat-service
    ports:
      - "8086:8086"

  notification-service:
    build: ./services/notification-service
    ports:
      - "8087:8087"

  map-service:
    build: ./services/map-service
    ports:
      - "8088:8088"

  statistic-service:
    build: ./services/statistic-service
    ports:
      - "8089:8089"

volumes:
  mysql-data:
